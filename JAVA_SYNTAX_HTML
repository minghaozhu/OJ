 // read the entire HTML file with Buffered Reader
 1. URL
 public static void main(String[] args) throws IOException
    {
    	
        StringBuffer document = new StringBuffer();
        try 
        {
            URL url = new URL("http://www.163.com");
            URLConnection conn = url.openConnection();
            BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
            String line = null;
            while ((line = reader.readLine()) != null)
            document.append(line + " ");
            reader.close();
        }
        catch (MalformedURLException e) 
        {
            e.printStackTrace(); 
        }
        catch (IOException e)
        {
            e.printStackTrace(); 
        }
        
        System.out.println(document.toString());
}
2. Local file
public static void main(String[] args) throws IOException
    {
        StringBuffer content = new StringBuffer();
        try {
            BufferedReader in = new BufferedReader(new FileReader("CAP 30.htm"));
            String str;
            while ((str = in.readLine()) != null) {
            	content.append(str);
            }
            in.close();
        } catch (IOException e) {
        }
        
        System.out.println(content);
 }       

3. Jsoup
public static void main2(String[] args) throws IOException {
	        //Validate.isTrue(args.length == 1, "usage: supply url to fetch");
		  	File input = new File("CAP 30.htm"); 
	        Document doc = Jsoup.parse(input,"UTF-8","http://www.oschina.net/");
	        Elements links = doc.select("a[href]");
	        Elements media = doc.select("[src]");
	        Elements imports = doc.select("link[href]");
	        print("\nMedia: (%d)", media.size());
	        for (Element src : media) {
	            if (src.tagName().equals("img"))
	                print(" * %s: <%s> %sx%s (%s)",
	                        src.tagName(), src.attr("abs:src"), src.attr("width"), src.attr("height"),
	                        trim(src.attr("alt"), 20));
	            else
	                print(" * %s: <%s>", src.tagName(), src.attr("abs:src"));
	        }
	        print("\nImports: (%d)", imports.size());
	        for (Element link : imports) {
	            print(" * %s <%s> (%s)", link.tagName(),link.attr("abs:href"), link.attr("rel"));
	        }
	        print("\nLinks: (%d)", links.size());
	        for (Element link : links) {
	            print(" * a: <%s>  (%s)", link.attr("abs:href"), trim(link.text(), 35));
	        }
	    }
	    private static void print(String msg, Object... args) {
	        System.out.println(String.format(msg, args));
	    }
	    private static String trim(String s, int width) {
	        if (s.length() > width)
	            return s.substring(0, width-1) + ".";
	        else
	            return s;
	    }
File input = new File("CAP 30.htm"); 
        Document doc = Jsoup.parse(input,"UTF-8","http://");
        //Document doc = Jsoup.connect("http://www.programcreek.com").get();
		
		String text = doc.body().text();
		//System.out.println(text);
		/*
		//print all titles in main page
		//Elements titles = doc.select(".entrytitle");
		//Elements titles = doc.select("p");
		for(Element e: titles){
			System.out.println("text: " +e.text());
			System.out.println("html: "+ e.html());
		}	
		*/
		for(int i = 0; i < 10000; i++)
		System.out.print(text.charAt(i));
		//print all available links on page
		Elements links1 = doc.select("a[href]");
		for(Element l: links1){
			System.out.println("link: " +l.attr("abs:href"));
		}
